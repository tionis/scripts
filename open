#!/bin/env bash
#--------------------------------------------
set -Eeuo pipefail
if [[ -n "${DEBUG:-}" ]]; then
  set -x
fi
trap stack_trace ERR
function stack_trace() {
  echo -e "\nThe command '$BASH_COMMAND' triggerd a stacktrace:\nStack Trace:"
  for ((i = 1; i < ${#FUNCNAME[@]}; i++)); do
    echo "    ($i) ${FUNCNAME[$i]:-(top level)} ${BASH_SOURCE[$i]:-(no file)}:${BASH_LINENO[$((i - 1))]}"
  done
}
error() { printf "\e[1;31m[ERROR]\e[0m %s\n" "${1:-error message missing}" && trap true ERR && exit 1; }
warning() { printf "\e[1;33m[WARNING]\e[0m %s\n" "$1" >&2; }
success() { printf "\e[1;32m[SUCCESS]\e[0m %s\n" "$1" >&2; }
info() { printf "\e[1;34m[INFO]\e[0m %s\n" "$1" >&2; }
green() { if [[ -t 0 ]]; then printf "\e[1;32m%s\e[0m" "$1"; else printf "%s" "$1"; fi; }
red() { if [[ -t 0 ]]; then printf "\e[1;31m%s\e[0m" "$1"; else printf "%s" "$1"; fi; }
blue() { if [[ -t 0 ]]; then printf "\e[1;34m%s\e[0m" "$1"; else printf "%s" "$1"; fi; }
SCRIPT_DIR="$(dirname "$(readlink -f "$0")")"
export SCRIPT_DIR
#--------------------------------------------
# shellcheck disable=SC2016
open_jq_urlparse='def urldecode:
  # urldecode courtesy of: https://gist.github.com/jcracknell/52cf4e0f8c4518a853784638db8a258d
  def unhex:
    if 48 <= . and . <= 57 then . - 48 elif 65 <= . and . <= 70 then . - 55 else . - 87 end;
  def bytes:
    def loop($i):
      if $i >= length then empty else 16 * (.[$i+1] | unhex) + (.[$i+2] | unhex), loop($i+3) end;
    [loop(0)];
  def codepoints:
    def loop($i):
      if $i >= length then empty
      elif .[$i] >= 240 then (.[$i+3]-128) + 64*(.[$i+2]-128) + 4096*(.[$i+1]-128) + 262144*(.[$i]-240), loop($i+4)
      elif .[$i] >= 224 then (.[$i+2]-128) + 64*(.[$i+1]-128) + 4096*(.[$i]-224), loop($i+3)
      elif .[$i] >= 192 then (.[$i+1]-128) + 64*(.[$i]-192), loop($i+2)
      else .[$i], loop($i+1) end;
    [loop(0)];
  gsub("(?<m>(?:%[0-9a-fa-f]{2})+)"; .m | explode | bytes | codepoints | implode);

def urlparse:
  # urlparse courtesy of: https://github.com/stedolan/jq/issues/537
  # delete nulls courtesy of: https://github.com/stedolan/jq/issues/104
  capture("^((?<scheme>[^:/?#]+):)?(//(?<authority>(?<domain>[^/?#:]*)(:(?<port>[0-9]*))?))?(?<path>[^?#]*)?([?](?<query>[^#]*))?(#(?<fragment>.*))?")
    | if .query
      then .query |= ((split("&") | .[] |= (split("=") | if (.|length) > 1
                                                         then {(.[0]): .[1] | urldecode}
                                                         else {(.[0]): ""} end)) | add)
      else . end
    | del(.[] | nulls);'

open:browser() {
  firefox "$1"
}

open:picture() {
  case "${TERM:-}" in
  xterm-kitty)
    kitty +kitten icat "$1" && read -rp "Press Enter to continue" </dev/tty
    ;;
  *)
    # TODO switch back to imv?
    firefox "$1"
    ;;
  esac
}

open:video() {
  mpv "$1"
}

open:audio() {
  mpv "$1"
}

open:editor() {
  "${EDITOR:-vim}" "$1"
}

open:pdf() {
  zathura "$1"
}

open:file() {
  mime="$(file -b --mime-type "$1")"
  case "$mime" in
  text/html)
    open:browser "$1"
    ;;
  text/*)
    open:editor "$1"
    ;;
  image/*)
    open:picture "$1"
    ;;
  video/*)
    open:video "$1"
    ;;
  audio/*)
    open:audio "$1"
    ;;
  application/pdf)
    open:pdf "$1"
    ;;
  *)
    warning "Unknown mime type: $mime"
    xdg-open "$1"
    ;;
  esac
}

open:scheme() {
  uri="$1"
  scheme="$2"
  path="$3"
  case "${scheme:-file}" in
  file | null)
    open:file "$uri"
    ;;
  http | https)
    open:browser "$uri"
    ;;
  *)
    error "Unknown scheme: $scheme"
    ;;
  esac
}

open() {
  while [[ $# -gt 0 ]]; do
    case "$1" in
    -h | --help)
      echo "Usage: open [options] <uri>"
      echo "Options:"
      echo "  -h, --help         Display this help message"
      echo "  -b, --background   Open in background"
      return 0
      ;;
    -b | --background)
      BACKGROUND=true
      ;;
    --)
      shift
      if [[ -z "${URI:-}" ]]; then
        URI="$1"
      fi
      shift
      for arg in "$@"; do
        URI+=" $arg"
      done
      break
      ;;
    *)
      URI="$1"
      ;;
    esac
    shift
  done
  if [[ -z "${URI:-}" ]]; then
    error "URI is missing"
  fi
  parsed="$(echo "$URI" | jq -R "$open_jq_urlparse"urlparse)"
  scheme="$(echo "$parsed" | jq -r '.scheme')"
  #domain="$(echo "$parsed" | jq -r '.domain')"
  path="$(echo "$parsed" | jq -r '.path')"
  if [[ -n "${BACKGROUND:-}" ]]; then
    open:scheme "$URI" "$scheme" "$path" &
    disown
  else
    open:scheme "$URI" "$scheme" "$path"
  fi
}
if [[ $- != *i* ]]; then
  open "$@"
fi
